(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(assert (<= (+ (* (- 10) x1) (* (- 6) x2) (* 1 x3) (* 7 x4) (* (- 1) x5) (* 5 x6) (* 3 x7) ) 6))
(assert (<= (+ (* (- 1) x1) (* 8 x2) (* 6 x3) (* 2 x4) (* 6 x5) (* 4 x6) (* (- 2) x7) ) 18))
(assert (<= (+ (* 4 x1) (* 2 x2) (* 9 x3) (* 6 x4) (* 4 x5) (* 5 x6) (* 2 x7) ) (- 17)))
(assert (<= (+ (* 2 x1) (* 2 x2) (* (- 6) x3) (* (- 4) x4) (* 2 x5) (* 1 x6) (* 3 x7) ) (- 7)))
(assert (<= (+ (* 5 x1) (* (- 8) x2) (* (- 5) x3) (* (- 8) x4) (* 5 x5) (* 8 x6) (* (- 4) x7) ) (- 21)))
(assert (<= (+ (* 3 x1) (* 10 x2) (* 3 x3) (* (- 4) x4) (* 1 x5) (* (- 10) x6) (* (- 7) x7) ) (- 19)))
(assert (<= (+ (* 1 x1) (* 10 x2) (* 10 x3) (* (- 6) x4) (* 2 x5) (* (- 1) x6) (* 3 x7) ) (- 6)))
(assert (<= (+ (* (- 10) x1) (* 5 x2) (* (- 3) x3) (* 0 x4) (* (- 7) x5) (* (- 10) x6) (* 9 x7) ) (- 22)))
(assert (<= (+ (* (- 10) x1) (* (- 7) x2) (* 9 x3) (* 5 x4) (* 9 x5) (* (- 8) x6) (* 6 x7) ) 4))
(assert (<= (+ (* (- 9) x1) (* (- 1) x2) (* 5 x3) (* 2 x4) (* (- 3) x5) (* 8 x6) (* 4 x7) ) (- 2)))
(assert (<= (+ (* 7 x1) (* 3 x2) (* (- 10) x3) (* (- 4) x4) (* 10 x5) (* 1 x6) (* 0 x7) ) 5))
(assert (<= (+ (* (- 4) x1) (* 7 x2) (* (- 3) x3) (* (- 3) x4) (* 5 x5) (* (- 5) x6) (* (- 7) x7) ) 25))
(assert (<= (+ (* (- 4) x1) (* 10 x2) (* (- 5) x3) (* (- 6) x4) (* (- 9) x5) (* (- 9) x6) (* 3 x7) ) 18))
(assert (<= (+ (* (- 2) x1) (* (- 2) x2) (* 0 x3) (* 3 x4) (* (- 5) x5) (* (- 7) x6) (* 1 x7) ) 8))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) (* 0 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 1 x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* (- 1) x6) (* 0 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 1 x7) ) 28))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* (- 1) x7) ) 28))
