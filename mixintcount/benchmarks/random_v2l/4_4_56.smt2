(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(assert (<= (+ (* (- 1) x1) (* (- 1) x2) (* 6 x3) (* (- 6) x4) ) 17))
(assert (<= (+ (* (- 5) x1) (* 5 x2) (* 2 x3) (* (- 5) x4) ) (- 43)))
(assert (<= (+ (* 8 x1) (* (- 3) x2) (* (- 6) x3) (* (- 9) x4) ) 31))
(assert (<= (+ (* 5 x1) (* 9 x2) (* 4 x3) (* 6 x4) ) 51))
(assert (<= (+ (* 10 x1) (* (- 2) x2) (* 10 x3) (* (- 6) x4) ) (- 37)))
(assert (<= (+ (* 3 x1) (* (- 2) x2) (* 3 x3) (* (- 5) x4) ) 20))
(assert (<= (+ (* (- 10) x1) (* 2 x2) (* (- 4) x3) (* 7 x4) ) 24))
(assert (<= (+ (* 7 x1) (* 10 x2) (* (- 1) x3) (* (- 1) x4) ) (- 55)))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) ) 56))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) ) 56))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) ) 56))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) ) 56))
