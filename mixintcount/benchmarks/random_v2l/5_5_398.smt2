(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(assert (<= (+ (* (- 9) x1) (* (- 8) x2) (* (- 4) x3) (* (- 9) x4) (* 3 x5) ) (- 227)))
(assert (<= (+ (* (- 3) x1) (* (- 10) x2) (* 1 x3) (* 3 x4) (* (- 8) x5) ) (- 239)))
(assert (<= (+ (* 7 x1) (* 0 x2) (* 3 x3) (* 3 x4) (* 9 x5) ) (- 327)))
(assert (<= (+ (* (- 6) x1) (* 5 x2) (* (- 3) x3) (* 0 x4) (* 5 x5) ) (- 198)))
(assert (<= (+ (* (- 2) x1) (* 4 x2) (* (- 6) x3) (* (- 3) x4) (* 6 x5) ) 47))
(assert (<= (+ (* (- 10) x1) (* 7 x2) (* 6 x3) (* (- 4) x4) (* 6 x5) ) (- 85)))
(assert (<= (+ (* (- 5) x1) (* (- 7) x2) (* (- 4) x3) (* 7 x4) (* 4 x5) ) (- 145)))
(assert (<= (+ (* (- 6) x1) (* 0 x2) (* 6 x3) (* 8 x4) (* (- 10) x5) ) 38))
(assert (<= (+ (* (- 10) x1) (* (- 6) x2) (* (- 3) x3) (* (- 3) x4) (* 3 x5) ) (- 393)))
(assert (<= (+ (* (- 5) x1) (* 9 x2) (* 3 x3) (* (- 1) x4) (* (- 5) x5) ) (- 185)))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 398))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) ) 398))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) ) 398))
