(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(assert (<= (+ (* (- 2) x1) (* (- 4) x2) (* (- 7) x3) (* 10 x4) (* 10 x5) (* 0 x6) (* 10 x7) (* (- 1) x8) ) (- 1)))
(assert (<= (+ (* (- 9) x1) (* 3 x2) (* (- 2) x3) (* 7 x4) (* (- 6) x5) (* 8 x6) (* 3 x7) (* (- 8) x8) ) 286))
(assert (<= (+ (* 3 x1) (* (- 4) x2) (* 6 x3) (* 10 x4) (* (- 9) x5) (* (- 6) x6) (* (- 4) x7) (* 4 x8) ) 241))
(assert (<= (+ (* 1 x1) (* 6 x2) (* (- 3) x3) (* 0 x4) (* (- 7) x5) (* 1 x6) (* 3 x7) (* (- 9) x8) ) 153))
(assert (<= (+ (* (- 9) x1) (* (- 10) x2) (* 5 x3) (* 10 x4) (* (- 9) x5) (* (- 4) x6) (* (- 2) x7) (* 7 x8) ) 238))
(assert (<= (+ (* (- 7) x1) (* (- 1) x2) (* (- 1) x3) (* 10 x4) (* 10 x5) (* 5 x6) (* 5 x7) (* 7 x8) ) (- 83)))
(assert (<= (+ (* 9 x1) (* (- 8) x2) (* (- 3) x3) (* 6 x4) (* 4 x5) (* (- 7) x6) (* (- 10) x7) (* (- 7) x8) ) (- 363)))
(assert (<= (+ (* (- 1) x1) (* 5 x2) (* (- 5) x3) (* 7 x4) (* 6 x5) (* (- 6) x6) (* 0 x7) (* 5 x8) ) (- 165)))
(assert (<= (+ (* 6 x1) (* (- 10) x2) (* (- 9) x3) (* (- 7) x4) (* (- 6) x5) (* (- 1) x6) (* 2 x7) (* (- 7) x8) ) 318))
(assert (<= (+ (* (- 3) x1) (* 6 x2) (* (- 7) x3) (* 9 x4) (* 5 x5) (* (- 7) x6) (* (- 4) x7) (* (- 2) x8) ) (- 295)))
(assert (<= (+ (* (- 3) x1) (* (- 2) x2) (* 7 x3) (* (- 1) x4) (* 5 x5) (* 1 x6) (* 3 x7) (* 1 x8) ) (- 312)))
(assert (<= (+ (* 7 x1) (* (- 10) x2) (* 7 x3) (* 10 x4) (* 4 x5) (* 8 x6) (* (- 9) x7) (* 8 x8) ) (- 431)))
(assert (<= (+ (* (- 2) x1) (* (- 3) x2) (* (- 8) x3) (* 2 x4) (* 4 x5) (* 8 x6) (* 3 x7) (* 3 x8) ) (- 99)))
(assert (<= (+ (* 7 x1) (* 7 x2) (* 8 x3) (* 1 x4) (* (- 9) x5) (* (- 7) x6) (* (- 3) x7) (* 0 x8) ) 360))
(assert (<= (+ (* 6 x1) (* (- 10) x2) (* (- 3) x3) (* 8 x4) (* 7 x5) (* (- 5) x6) (* 5 x7) (* 7 x8) ) 41))
(assert (<= (+ (* 0 x1) (* 6 x2) (* 5 x3) (* (- 1) x4) (* (- 9) x5) (* (- 9) x6) (* 1 x7) (* 3 x8) ) 12))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 1 x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* (- 1) x6) (* 0 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 1 x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* (- 1) x7) (* 0 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 1 x8) ) 501))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* (- 1) x8) ) 501))
