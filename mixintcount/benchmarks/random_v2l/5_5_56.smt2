(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(assert (<= (+ (* 5 x1) (* (- 8) x2) (* (- 2) x3) (* (- 9) x4) (* 9 x5) ) 0))
(assert (<= (+ (* (- 3) x1) (* 7 x2) (* 4 x3) (* (- 3) x4) (* (- 8) x5) ) (- 2)))
(assert (<= (+ (* (- 3) x1) (* (- 8) x2) (* 9 x3) (* 10 x4) (* 3 x5) ) (- 50)))
(assert (<= (+ (* (- 10) x1) (* (- 8) x2) (* 3 x3) (* (- 2) x4) (* (- 8) x5) ) (- 51)))
(assert (<= (+ (* 8 x1) (* (- 5) x2) (* 7 x3) (* 3 x4) (* (- 4) x5) ) (- 27)))
(assert (<= (+ (* 7 x1) (* 10 x2) (* (- 6) x3) (* (- 7) x4) (* (- 10) x5) ) (- 45)))
(assert (<= (+ (* 0 x1) (* (- 5) x2) (* 5 x3) (* (- 9) x4) (* 0 x5) ) (- 21)))
(assert (<= (+ (* 0 x1) (* 6 x2) (* 8 x3) (* (- 3) x4) (* 3 x5) ) 31))
(assert (<= (+ (* 9 x1) (* 3 x2) (* 2 x3) (* 1 x4) (* 9 x5) ) 18))
(assert (<= (+ (* 4 x1) (* 6 x2) (* 8 x3) (* 0 x4) (* (- 2) x5) ) (- 49)))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 56))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) ) 56))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) ) 56))
