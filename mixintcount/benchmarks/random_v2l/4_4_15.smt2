(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(assert (<= (+ (* (- 1) x1) (* (- 2) x2) (* (- 4) x3) (* 5 x4) ) 5))
(assert (<= (+ (* 2 x1) (* (- 1) x2) (* (- 2) x3) (* 10 x4) ) (- 14)))
(assert (<= (+ (* (- 6) x1) (* 3 x2) (* (- 3) x3) (* 5 x4) ) 15))
(assert (<= (+ (* (- 7) x1) (* (- 7) x2) (* 8 x3) (* (- 8) x4) ) 4))
(assert (<= (+ (* (- 9) x1) (* 4 x2) (* 8 x3) (* 2 x4) ) (- 7)))
(assert (<= (+ (* (- 5) x1) (* 2 x2) (* 5 x3) (* 3 x4) ) 15))
(assert (<= (+ (* (- 3) x1) (* 10 x2) (* (- 2) x3) (* 1 x4) ) (- 8)))
(assert (<= (+ (* 1 x1) (* (- 7) x2) (* (- 8) x3) (* 9 x4) ) (- 2)))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) ) 15))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) ) 15))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) ) 15))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) ) 15))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) ) 15))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) ) 15))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) ) 15))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) ) 15))
