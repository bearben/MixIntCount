(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(assert (<= (+ (* 1 x1) (* (- 8) x2) (* 3 x3) (* (- 10) x4) (* (- 1) x5) ) 286))
(assert (<= (+ (* (- 4) x1) (* (- 10) x2) (* (- 4) x3) (* 5 x4) (* 3 x5) ) (- 307)))
(assert (<= (+ (* 2 x1) (* 3 x2) (* (- 10) x3) (* 6 x4) (* 9 x5) ) (- 57)))
(assert (<= (+ (* (- 10) x1) (* (- 10) x2) (* 3 x3) (* 2 x4) (* 2 x5) ) 280))
(assert (<= (+ (* (- 2) x1) (* (- 4) x2) (* 9 x3) (* 8 x4) (* 9 x5) ) 19))
(assert (<= (+ (* (- 2) x1) (* (- 1) x2) (* (- 6) x3) (* 9 x4) (* (- 2) x5) ) 351))
(assert (<= (+ (* 10 x1) (* 4 x2) (* 2 x3) (* (- 7) x4) (* (- 4) x5) ) 230))
(assert (<= (+ (* 4 x1) (* 6 x2) (* 3 x3) (* 4 x4) (* 1 x5) ) (- 13)))
(assert (<= (+ (* 5 x1) (* (- 1) x2) (* 0 x3) (* (- 5) x4) (* (- 10) x5) ) (- 220)))
(assert (<= (+ (* 2 x1) (* (- 1) x2) (* (- 4) x3) (* 0 x4) (* (- 6) x5) ) (- 66)))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 354))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) ) 354))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) ) 354))
