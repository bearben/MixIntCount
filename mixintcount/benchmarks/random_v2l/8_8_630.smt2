(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(assert (<= (+ (* 10 x1) (* 9 x2) (* 3 x3) (* (- 3) x4) (* 9 x5) (* (- 10) x6) (* 3 x7) (* 2 x8) ) (- 497)))
(assert (<= (+ (* 2 x1) (* 5 x2) (* 1 x3) (* (- 7) x4) (* (- 7) x5) (* (- 5) x6) (* 4 x7) (* 8 x8) ) (- 310)))
(assert (<= (+ (* 0 x1) (* 5 x2) (* 1 x3) (* 9 x4) (* 3 x5) (* 7 x6) (* (- 1) x7) (* 0 x8) ) 624))
(assert (<= (+ (* (- 4) x1) (* (- 9) x2) (* 2 x3) (* (- 4) x4) (* (- 10) x5) (* (- 2) x6) (* 7 x7) (* (- 5) x8) ) 557))
(assert (<= (+ (* 7 x1) (* 9 x2) (* 9 x3) (* 3 x4) (* 0 x5) (* 3 x6) (* (- 7) x7) (* 1 x8) ) (- 268)))
(assert (<= (+ (* (- 2) x1) (* (- 5) x2) (* (- 1) x3) (* 1 x4) (* 5 x5) (* (- 7) x6) (* (- 9) x7) (* 1 x8) ) (- 566)))
(assert (<= (+ (* 8 x1) (* 10 x2) (* (- 7) x3) (* 1 x4) (* (- 6) x5) (* (- 5) x6) (* (- 10) x7) (* (- 2) x8) ) 188))
(assert (<= (+ (* (- 1) x1) (* (- 6) x2) (* (- 3) x3) (* 5 x4) (* 10 x5) (* (- 5) x6) (* 3 x7) (* 2 x8) ) 258))
(assert (<= (+ (* (- 7) x1) (* 3 x2) (* (- 8) x3) (* 7 x4) (* 9 x5) (* (- 3) x6) (* (- 4) x7) (* (- 1) x8) ) (- 340)))
(assert (<= (+ (* (- 3) x1) (* 1 x2) (* 0 x3) (* (- 9) x4) (* (- 4) x5) (* (- 2) x6) (* (- 8) x7) (* 5 x8) ) (- 339)))
(assert (<= (+ (* (- 3) x1) (* 6 x2) (* 10 x3) (* (- 1) x4) (* (- 6) x5) (* (- 9) x6) (* 6 x7) (* 7 x8) ) (- 449)))
(assert (<= (+ (* 9 x1) (* 0 x2) (* 2 x3) (* (- 1) x4) (* 3 x5) (* (- 6) x6) (* 1 x7) (* (- 2) x8) ) (- 88)))
(assert (<= (+ (* 8 x1) (* 2 x2) (* 0 x3) (* 7 x4) (* 9 x5) (* (- 10) x6) (* (- 5) x7) (* 8 x8) ) 15))
(assert (<= (+ (* 3 x1) (* 9 x2) (* 10 x3) (* (- 8) x4) (* (- 5) x5) (* 5 x6) (* (- 9) x7) (* 2 x8) ) (- 266)))
(assert (<= (+ (* (- 10) x1) (* (- 5) x2) (* 3 x3) (* (- 9) x4) (* (- 7) x5) (* (- 10) x6) (* 1 x7) (* 1 x8) ) 626))
(assert (<= (+ (* 4 x1) (* (- 9) x2) (* 10 x3) (* 4 x4) (* 8 x5) (* (- 1) x6) (* (- 7) x7) (* 2 x8) ) (- 356)))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) (* 0 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 1 x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* (- 1) x6) (* 0 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 1 x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* (- 1) x7) (* 0 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* 1 x8) ) 630))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) (* 0 x6) (* 0 x7) (* (- 1) x8) ) 630))
