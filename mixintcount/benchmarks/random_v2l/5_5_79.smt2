(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(assert (<= (+ (* 8 x1) (* (- 9) x2) (* 10 x3) (* 8 x4) (* (- 10) x5) ) (- 2)))
(assert (<= (+ (* 3 x1) (* 8 x2) (* 10 x3) (* 8 x4) (* 3 x5) ) 49))
(assert (<= (+ (* 0 x1) (* (- 9) x2) (* (- 9) x3) (* (- 8) x4) (* 10 x5) ) (- 38)))
(assert (<= (+ (* 8 x1) (* 7 x2) (* (- 5) x3) (* 10 x4) (* (- 5) x5) ) 10))
(assert (<= (+ (* 9 x1) (* 1 x2) (* 3 x3) (* 9 x4) (* 1 x5) ) 17))
(assert (<= (+ (* (- 1) x1) (* (- 4) x2) (* 8 x3) (* (- 3) x4) (* (- 9) x5) ) 37))
(assert (<= (+ (* 5 x1) (* 4 x2) (* 3 x3) (* 2 x4) (* 2 x5) ) 8))
(assert (<= (+ (* (- 10) x1) (* (- 9) x2) (* (- 5) x3) (* 10 x4) (* (- 9) x5) ) (- 43)))
(assert (<= (+ (* (- 1) x1) (* 9 x2) (* (- 9) x3) (* 2 x4) (* 8 x5) ) 63))
(assert (<= (+ (* (- 9) x1) (* 4 x2) (* 5 x3) (* 4 x4) (* 3 x5) ) 57))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 79))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) (* 0 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* 1 x5) ) 79))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 0 x4) (* (- 1) x5) ) 79))
