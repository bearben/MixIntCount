(set-logic QF_LIA)
(set-info :ran/ran2.smt2)
(set-info :smt-lib-version 2.0)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(assert (<= (+ (* 7 x1) (* 9 x2) (* (- 3) x3) (* 8 x4) ) 5))
(assert (<= (+ (* 7 x1) (* 5 x2) (* (- 1) x3) (* 4 x4) ) 7))
(assert (<= (+ (* 3 x1) (* (- 8) x2) (* (- 8) x3) (* (- 1) x4) ) (- 5)))
(assert (<= (+ (* (- 6) x1) (* (- 10) x2) (* (- 1) x3) (* (- 2) x4) ) (- 10)))
(assert (<= (+ (* (- 7) x1) (* (- 8) x2) (* (- 10) x3) (* (- 4) x4) ) (- 1)))
(assert (<= (+ (* (- 6) x1) (* 6 x2) (* (- 1) x3) (* (- 7) x4) ) (- 1)))
(assert (<= (+ (* (- 3) x1) (* 9 x2) (* (- 5) x3) (* 4 x4) ) (- 7)))
(assert (<= (+ (* 10 x1) (* (- 2) x2) (* (- 2) x3) (* (- 2) x4) ) 13))
(assert (<= (+ (* 1 x1) (* 0 x2) (* 0 x3) (* 0 x4) ) 19))
(assert (<= (+ (* (- 1) x1) (* 0 x2) (* 0 x3) (* 0 x4) ) 19))
(assert (<= (+ (* 0 x1) (* 1 x2) (* 0 x3) (* 0 x4) ) 19))
(assert (<= (+ (* 0 x1) (* (- 1) x2) (* 0 x3) (* 0 x4) ) 19))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 1 x3) (* 0 x4) ) 19))
(assert (<= (+ (* 0 x1) (* 0 x2) (* (- 1) x3) (* 0 x4) ) 19))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* 1 x4) ) 19))
(assert (<= (+ (* 0 x1) (* 0 x2) (* 0 x3) (* (- 1) x4) ) 19))
